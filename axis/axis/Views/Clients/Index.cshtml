@model PagedList.IPagedList<AXIS.Models.Client>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Clients";
}

<h2>Business Development &raquo; Customer DB</h2>
    
<p>
    <a href=@Url.Action("Index","BusDev") class="btn btn-primary btn-xs">Back</a>
    <a href=@Url.Action("Create","Clients") class="btn btn-primary btn-xs">New Client</a>
</p>

<div class="panel panel-default">
    <!-- Default panel contents -->
    <div class="panel-heading">
        @using (Html.BeginForm("Index", "Clients", FormMethod.Get))
        {
            <p>
                Find by Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-controlsearch" })
                <input type="submit" value="Search" />
            </p>
        }
    </div>

    <table class="table table-bordered">
        <tr>
            <th>
                @Html.ActionLink("Full Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                Title
            </th>
            <th>
                @Html.ActionLink("Company", "Index", new { sortOrder = ViewBag.CompanySortParm })
            </th>
            <th>
                Department
            </th>
            <th>
                City
            </th>
            <th>
                @Html.ActionLink("State", "Index", new { sortOrder = ViewBag.StateSortParm })
            </th>
            <th>
                Region
            </th>
            <th>
                Country
            </th>
            <th>Actions</th>
        </tr>

        @foreach (var item in Model)
            {
                var ident = "Client" + @item.ClientId;

                var fullname = @item.FirstName + " " + @item.LastName;

            <tr id=@ident>
                <td>
                    @Html.DisplayFor(modelItem => fullname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>

                    @Html.ActionLink("Profile", "Details", new { id = item.ClientId }, new { @class = "glyphicon glyphicon-user" })

                </td>
            </tr>
        }

    </table>
    <div class="panel-footer">
        <div class="row">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>




@Html.AntiForgeryToken()
<p id="msg"></p>

@section scripts
{
    <script>
    function confirmDelete(id) {
        bootbox.confirm({
            message: "Are you sure you want to delete this?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/clients/Delete/";
                    var ClientId = id
                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: ClientId, __RequestVerificationToken: anti }, function (data) {



                        $("#Client" + ClientId).remove();
                        $("#msg").last().addClass("alert alert-success");
                        $("#msg").html(data);
                    });

                }
            }
        });


    }
    </script>


}

