@model AXIS.Models.AssignmentOfTool

@{
    ViewBag.Title = "Edit";
}
<h2>MOBILIZATION &raquo; SETUP</h2>
<p>
    <a href=@Url.Action("Index", "Mobilization") class="btn btn-primary btn-xs">BACK</a>
</p>

<h4>ASSIGNMENT OF TOOLS</h4>

@using (Html.BeginForm("Edit", "ATools", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="panelright">
        <div class="panel panel-axislg right">
            <!-- Default panel contents -->
            <div class="panel-heading">JOB # @ViewBag.ContractId  AXIS PO # @ViewBag.PurchaseOrderId</div>

            <table class="table table-bordered">
                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PurchaseOrderId)
                    @Html.Hidden("ContractId", (Int32)ViewBag.ContractId)

                    @{

                        if (Model.SuppliedBy == null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.SuppliedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.SuppliedBy, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SuppliedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {

                            <div class="form-group">
                                @Html.LabelFor(model => model.SuppliedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.SuppliedBy, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SuppliedBy, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.SuppliedBy)
                                    @Html.HiddenFor(model => model.Cost)
                                </div>
                            </div>

                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.AditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AditionalInfo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AditionalInfo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (Model.SuppliedBy == null)
                        {

                            <div id="selectSB" style="display:none">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FileT, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FileT, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                                        @Html.ValidationMessageFor(model => model.FileT, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {

                            if ((Int32)Model.SuppliedBy == 1 || (Int32)Model.SuppliedBy == 2)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FileT, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FileT, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                                        @Html.ValidationMessageFor(model => model.FileT, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            }


                        }
                    }


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </table>

        </div>
    </div>
                        }
@{
    if (Model.SuppliedBy != null)
    {
        if ((Int32)Model.SuppliedBy == 3)
        {


            //Muestra el listado de las herramientas ya seleccionadas
            @Html.Action("PartialListContract", "ToolbyJob", new { Id = @ViewBag.ContractId, PurchaseOrderId= @ViewBag.PurchaseOrderId })
            //Muestra listado de herramientas que se pueden asignar
            @Html.Action("PartialList", "ToolbyJob", new { Id = @ViewBag.ContractId, PurchaseOrderId = @ViewBag.PurchaseOrderId })
            //PEndiente renderizar la vista cuando se selecciona el inventario de herramientas
        }
    }

}


<div id="ListTools" style="display:none">
    @Html.Action("PartialList", "ToolbyJob", new { Id = @ViewBag.ContractId, PurchaseOrderId = @ViewBag.PurchaseOrderId })

</div>

<script src="/Scripts/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#SuppliedBy").change(function () {

            $("#AditionalInfo").val("");
            $("#OrderNumber").val("");
            $("#Cost").val("0.0");
            $("#FileT").val("");

            var s = $(this).val();

            switch (parseInt(s)) {

                case 0:
                    if (!$('#selectSB').is(":hidden")) {
                        $("#selectSB").toggle("slow");
                    }
                    if (!$('#ListTools').is(":hidden")) {
                        $("#ListTools").toggle("slow");
                    }
                    break;
                case 1:
                case 2:

                    if ($('#selectSB').is(":hidden")) {
                        $("#selectSB").toggle("slow");
                    }
                    if (!$('#ListTools').is(":hidden")) {
                        $("#ListTools").toggle("slow");
                    }
                    break;
                case 3:

                    if (!$('#selectSB').is(":hidden")) {
                        $("#selectSB").toggle("slow");
                    }
                    $("#ListTools").toggle("slow");
                    break;

                default:
                    if (!$('#selectSB').is(":hidden")) {
                        $("#selectSB").toggle("slow");
                    }
                    if (!$('#ListTools').is(":hidden")) {
                        $("#ListTools").toggle("slow");
                    }
                    break;

            }


        });
    });

</script>