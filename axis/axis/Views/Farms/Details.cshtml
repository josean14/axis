    @model AXIS.Models.Farm

@{
    ViewBag.Title = "View Farm";
}


<div class="container">
    <h1 class="well">VIEW FARM</h1>
    <div class="col-lg-12 well">
        <div class="row">
            <form>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <label>Type of Farm</label>
                            @Html.TextBoxFor(model => model.TypeFarm, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="col-sm-6 form-group">
                            <label>Farm Name</label>
                            @Html.TextBoxFor(model => model.FarmName, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <label>Address</label>
                            @Html.TextAreaFor(model => model.StreetAddress, new { disabled = "disabled", @readonly = "readonly", @class = "form-control", @rows = "3" })
                        </div>
                        <div class="col-sm-6 form-group">
                        <label>Email</label>
                        @Html.TextAreaFor(model => model.Email, new { disabled = "disabled", @readonly = "readonly", @class = "form-control", @rows = "3" })
                    </div>

                    </div>
                        <div class="row">
                            <div class="col-sm-4 form-group">
                                <label>City</label>
                                @Html.TextBoxFor(model => model.City, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            </div>
                            <div class="col-sm-4 form-group">
                                <label>State</label>
                                @Html.TextBoxFor(model => model.State, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            </div>
                            <div class="col-sm-4 form-group">
                                <label>Zip</label>
                                @Html.TextBoxFor(model => model.ZipCode, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Country</label>
                            @Html.TextBoxFor(model => model.Country, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>Manufacture</label>
                            @Html.TextBoxFor(model => model.Manufacture, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>Platform</label>
                            @Html.TextBoxFor(model => model.Platform, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })

                        </div>
                        <div class="form-group">
                            <label>Convertor</label>
                            @Html.TextBoxFor(model => model.Convertor, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label># of Towers</label>
                            @Html.TextBoxFor(model => model.NumberTowers, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>MW</label>
                            @Html.TextBoxFor(model => model.NumberMws, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>Gearbox</label>
                            @Html.TextBoxFor(model => model.Gearbox, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>Site Manager</label>
                            @Html.TextBoxFor(model => model.Client.FullName, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                        </div>
                        <div class="row">
                            <div class="col-sm-4 form-group">
                                <label>GeoLong</label>
                                @Html.TextBoxFor(model => model.GeoLong, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            </div>
                            <div class="col-sm-4 form-group">
                                <label>GeoLat</label>
                                @Html.TextBoxFor(model => model.GeoLat, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">

                        </div>
                    </div>
            </form>
        </div>
    </div>
</div>


<p>
    <a href=@Url.Action("Index", "Farms") class="btn btn-primary btn-xs">BACK</a>
    <a href=@Url.Action("Edit", "Farms", new { id = Model.FarmId }) class="btn btn-primary btn-xs"> EDIT </a>


</p>
