@model AXIS.Models.Farm

@{
    ViewBag.Title = "Edit Farm";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.FarmId)

    <div class="container">
        <h1 class="well">EDIT FARM</h1>
        <div class="col-lg-12 well">
            <div class="row">
                <form>
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-6 form-group">
                                <label>Type of Farm</label>
                                @Html.EnumDropDownListFor(model => model.TypeFarm, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TypeFarm, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6 form-group">
                                <label>Farm Name</label>
                                @Html.EditorFor(model => model.FarmName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Farm Name Here.." } })
                                @Html.ValidationMessageFor(model => model.FarmName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6 form-group">
                                <label>Address</label>
                                @Html.TextAreaFor(model => model.StreetAddress, new { @class = "form-control", placeholder = "Enter Address Here..", @rows = "3" })
                                @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6 form-group">
                                <label>Email</label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email Here.." } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                        </div>
                            <div class="row">
                                <div class="col-sm-4 form-group">
                                    <label>City</label>
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter City Name Here.." } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4 form-group">
                                    <label>State</label>
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter State Name Here.." } })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4 form-group">
                                    <label>Zip</label>
                                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Zip Code Here.." } })
                                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Country</label>
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Country Name Here.." } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Manufacture</label>
                                @Html.EditorFor(model => model.Manufacture, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Manufacture Here.." } })
                                @Html.ValidationMessageFor(model => model.Manufacture, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Platform</label>
                                @Html.EditorFor(model => model.Platform, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Platform Here.." } })
                                @Html.ValidationMessageFor(model => model.Platform, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Convertor</label>
                                @Html.EditorFor(model => model.Convertor, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Convertor Here.." } })
                                @Html.ValidationMessageFor(model => model.Convertor, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label># of Towers</label>
                                @Html.EditorFor(model => model.NumberTowers, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter # of Towers Here.." } })
                                @Html.ValidationMessageFor(model => model.NumberTowers, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>MW</label>
                                @Html.EditorFor(model => model.NumberMws, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter # MWatts Here.." } })
                                @Html.ValidationMessageFor(model => model.NumberMws, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Gearbox</label>
                                @Html.EditorFor(model => model.Gearbox, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Gearbox Here.." } })
                                @Html.ValidationMessageFor(model => model.Gearbox, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Select Site Manager</label>
                                @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                            </div>
                            <div class="row">
                                <div class="col-sm-4 form-group">
                                    <label>GeoLong</label>
                                    @Html.EditorFor(model => model.GeoLong, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter GeoLong Here.." } })
                                    @Html.ValidationMessageFor(model => model.GeoLong, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4 form-group">
                                    <label>GeoLat</label>
                                    @Html.EditorFor(model => model.GeoLat, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter GeoLat Here.." } })
                                    @Html.ValidationMessageFor(model => model.GeoLat, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <a href=@Url.Action("Index", "Farms") class="btn btn-primary btn-xs">BACK</a>
                                    <input type="submit" value="SAVE" class="btn btn-primary btn-xs" />
                                    <a href="" onclick="confirmDelete(); return false;" class="btn btn-primary btn-xs">DELETE</a>

                                </div>
                            </div>
                        </div>
                </form>
            </div>
        </div>
    </div>

    <div>


    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<script>
    function confirmDelete() {
        bootbox.confirm({
            message: "Are you sure you want to delete this?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/Farms/Delete/";
                    var FarmId = $('#FarmId').val();

                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: FarmId, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1){

                            var url = '@Url.Action("Index", "Farms")';
                            window.location.href = url;
                        }




                  });

                }
            }
        });


    }
</script>
}
