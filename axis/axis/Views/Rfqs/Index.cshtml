@model PagedList.IPagedList<AXIS.Models.Rfq>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "RFQ LIST";
}

<h2>Request for Quote (RFQ, RFP)</h2>
<h3>
    Type of Site: @ViewBag.Typefarm
</h3>

<p>
    <a href=@Url.Action("Index","BusDev") class="btn btn-primary btn-xs">BACK</a>
</p>


<div class="panel panel-default">
    <!-- Default panel contents -->
    <div class="panel-heading">
        @Html.Hidden("Typefarm")
        <p>
            Find by RFQ #: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-controlsearch" })
            <input type="submit" value="Search" onclick="searchrfq()" />
        </p>

        <p style="color:red">
            @ViewBag.Message
        </p>

    </div>

    <table class="table table-bordered">
        <tr>
            <th>
                @Html.ActionLink("RFQ #", "Index", new { sortOrder = ViewBag.RfqSortParm, typefarm = ViewBag.Typefarm })
            </th>

            <th>
                <P>SITE NAME</P>
            </th>
            <th>
                <P>CUSTOMER</P>
            </th>

            <th style:align="Center">
                @Html.ActionLink("STATUS", "Index", new { sortOrder = ViewBag.StatusSortParm, typefarm = ViewBag.Typefarm })
            </th>
            <th>ACTIONS</th>
        </tr>

        @foreach (var item in Model)
        {

            var ident = "Rfq" + @item.RfqId;
            <tr id=@ident>
                <td>
                    @Html.DisplayFor(modelItem => item.RfqId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Farm.FarmName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Farm.Client.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.ActionLink(" ", "Details", new { id = item.RfqId, typefarm = ViewBag.Typefarm }, new { @class = "glyphicon glyphicon-list-alt", @title = "Details" }) |
                    
                    @{
                        if (item.Status == "Open")
                        {
                            <a href="" onclick="confirmDelete(@item.RfqId); return false;" class="glyphicon glyphicon-trash" , title="Delete RFQ"></a>
                            <a href = "" onclick = "confirmClosed(@item.RfqId); return false;" class="glyphicon glyphicon-remove" , title="Closed RFQ"></a>
                        }
                    }

                </td>
            </tr>
        }

    </table>

    <div class="panel-footer">
        <div class="row">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                 new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>



@Html.AntiForgeryToken()
<p id="msg"></p>

@section scripts
{
    <script>
    function confirmDelete(id) {
        bootbox.confirm({
            message: "ARE YOU SURE TO DELETE THIS RFQ?",
            buttons: {
                confirm: {
                    label: 'YES',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'NO',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/rfqs/Delete/";
                    var RfqId = id
                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: RfqId, __RequestVerificationToken: anti }, function (data) {



                        $("#Rfq" + RfqId).remove();
                        $("#msg").last().addClass("alert alert-success");
                        $("#msg").html(data);
                    });

                }
            }
        });


    }

    function searchrfq() {
        var typefarm = $("#Typefarm").val();
        var searchval = $("#SearchString").val();
        var url = "/rfqs/Index?searchString="+searchval+"&typefarm="+typefarm;

        location.href = url;

    }

    function confirmClosed(id) {
        bootbox.confirm({
            message: "ARE YOU SURE TO CLOSE THIS RFQ?",
            buttons: {
                confirm: {
                    label: 'YES',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'NO',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/rfqs/Closed/";
                    var RfqId = id
                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: RfqId, __RequestVerificationToken: anti }, function (data) {



                        $("#Rfq" + RfqId).remove();
                        $("#msg").last().addClass("alert alert-success");
                        $("#msg").html(data);
                    });

                }
            }
        });


    }


    </script>


}
