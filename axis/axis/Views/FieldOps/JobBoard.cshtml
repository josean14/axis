@{
    ViewBag.Title = "PROFILE";
}

<h2>FIELD OPERATIONS &raquo; JOB BOARD</h2>

<p>
    <a href=@Url.Action("Index", "FieldOps") class="btn btn-primary btn-xs">BACK</a>
</p>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyArIMU4trVLeSiGzG4j-rHnyjiI5IZp5eQ" type="text/javascript"></script>


<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    //<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var SanDiego = new google.maps.LatLng(32.7917897, -117.1809405);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 10,
            center: SanDiego,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in San Diego
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = [
                  { "Id": 1, "PlaceName": "Axis Office", "GeoLong": "32.7673547", "GeoLat": "-117.1994852", "Descriptionfarm": "Information about Office"},
                  { "Id": 2, "PlaceName": "Axis New Office ", "GeoLong": "32.7670909", "GeoLat": "-117.1393273", "Descriptionfarm": "Information about New Office for George" },
               ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName,
                'description': item.Descriptionfarm,
                'optimized': false
            });

            var pinIcon = new google.maps.MarkerImage(
    "http://ecocelrenewables.com/wp-content/uploads/2015/12/slow_animated_turbine.gif",
    null, /* size is determined at runtime */
    null, /* origin is 0,0 */
    null, /* anchor is bottom center of the scaled image */
    new google.maps.Size(22, 39)
);
            // Make the marker-pin blue!
            marker.setIcon(pinIcon)

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "<h3>" + item.Descriptionfarm + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }


        </script>
        @*<script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyArIMU4trVLeSiGzG4j-rHnyjiI5IZp5eQ&callback=initMap">
        </script>*@
    </section>
}
