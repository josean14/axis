@model IEnumerable<AXIS.Models.FieldOperations>

@{
    ViewBag.Title = "MOBILIZATION CHANGES";
}

<h2>MOBILIZATION &raquo; JOB CHANGES &raquo; TECHNICIANS</h2>

<p>
    <a href=@Url.Action("JobChanges", "FieldOps") class="btn btn-primary btn-xs">BACK</a>
</p>

<div class="panelright">
    <div class="panel panel-axislg right">
        <!-- Default panel contents -->
        <div class="panel-heading">JOB # @ViewBag.ContractId  AXIS PO # @ViewBag.PurchaseOrderId</div>

        <table class="table table-bordered">
            <tr>
                <th align="center">
                    <p>SITE NAME:</p>
                </th>
                <th align="center">
                    <div class="col-md-10">
                        
                    </div>
                </th>
            </tr>
            <tr>
                <th align="center">
                    <p>RESOURCE MANAGER:</p>
                </th>
                <th align="center">
                    <div class="col-md-10">

                    </div>
                </th>
            </tr>
        </table>

    </div>
</div>


<div class="panel panel-default">

    <table class="table table-bordered">
        <thead class="tr-axis">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaseOrder.PO)
                </th>
                <th align="center">
                    FULL NAME
                </th>
                <th align="center">
                    @Html.DisplayNameFor(model => model.status)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PerDiemAdvance)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.TechApprovalADV)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CertificatesStatus)
                </th>
                <th align="center">
                    ACTIONS
                </th>
            </tr>
        </thead>
        @foreach (var item in Model)
            {
                var ident = "FO" + @item.FieldOperationsId;
            <tr id=@ident>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder.PO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tech.FullName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td align="center">
                    @{
                        int b = (int)item.PerDiemAdvance;
                        if (b == 7)
                        {
                            <p>7 DAYS</p>
                        }
                        if (b == 14)
                        {
                            <p>14 DAYS</p>
                        }
                        if (b == 0)
                        {
                            <p>NOT AUTORIZED</p>
                        }
                    }
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.TechApprovalADV)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.CertificatesStatus)
                </td>
                <td>
                    @{
                        @Html.ActionLink(" DEMOB", null, null, new { href = "", onclick = "liberty(" + item.FieldOperationsId + "); return false;", @class = "glyphicon glyphicon-remove btn btn-primary btn-xs" })
                     }

                </td>
            </tr>
                        }

    </table>
</div>

<p>
    <a href=@Url.Action("JobChanges", "FieldOps") class="btn btn-primary btn-xs">ADD TECHNICIAN</a>
</p>


@Html.AntiForgeryToken()
<p id="msg"></p>

<script>
    function approval(id) {
        bootbox.confirm({
            message: "Are you sure to approve this Technician ?",
            buttons: {
                confirm: {
                    label: 'APPROVE',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'CANCEL',
                    className: 'btn-danger'
                }



            },
            callback: function (result) {

                var url2 = '@Url.Action("Authorization", "Mobilization")';

                if (result) {

                    var url = "/Mobilization/Assigned/";
                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: id, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1) {

                            window.location.href = url2;
                        }

                    });

                }
            }
        });


    }

    function rejectd(id) {

        bootbox.prompt({
            title: "Are you sure to rejectd this Technician ?",
            inputType: 'textarea',
            buttons: {
                    confirm: {
                        label: 'REJECTED',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'CANCEL',
                        className: 'btn-danger'
                    }
                },
            callback: function (result) {

                var url2 = '@Url.Action("Authorization", "Mobilization")';

                if (result) {

                    var url = "/Mobilization/Denied/";
                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: id, comment: result, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1) {

                            window.location.href = url2;
                        }

                    });

                }
            }
        });


    }


    function liberty(id) {
        bootbox.confirm({
            message: "Are you sure to Demob this Technician ?",
            buttons: {
                confirm: {
                    label: 'YES',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'NO',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/Mobilization/Liberty/";

                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: id, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1) {
                            var url2 = '@Url.Action("Authorization", "Mobilization")';
                            window.location.href = url2;
                        }

                    });
                }
            }
        });
    }

    function approvalADV(id) {
        bootbox.confirm({
            message: "Are you sure to approval this Technician ?",
            buttons: {
                confirm: {
                    label: 'YES',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'NO',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {
                    var url = "/Mobilization/ApprovalADV/";

                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: id, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1) {
                            var url2 = '@Url.Action("Authorization", "Mobilization")';
                            window.location.href = url2;
                        }

                    });
                }
            }
        });
    }

    function rejectdADV(id) {
        bootbox.prompt({
            title: "Are you sure to rejectd this Technician ?",
            inputType: 'textarea',
            buttons: {
                confirm: {
                    label: 'REJECTED',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'CANCEL',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {

                if (result) {

                    var url = "/Mobilization/UnapprovalADV/";

                    var anti = $('[name=__RequestVerificationToken]').val();

                    $.post(url, { id: id, comment: result, __RequestVerificationToken: anti }, function (data) {

                        if (data = 1) {
                            var url2 = '@Url.Action("Authorization", "Mobilization")';
                            window.location.href = url2;
                        }

                    });
                }
            }
        });
    }
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>